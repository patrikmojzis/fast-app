services:
  # Web application (API and WebSocket)
  asgi:
    build: .
    container_name: "${APP_NAME:-fast_app}-asgi"
    ports:
      - "${MAP_ASGI_PORT:-8000}:8000"
    env_file:
      - .env.docker
    environment:
      - REDIS_HOST=redis
    depends_on:
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    command: ["hypercorn", "app.modules.asgi.app:app", "--bind", "0.0.0.0:8000"]
    restart: unless-stopped 
    volumes:
      - ./log:/app/log
      - ./storage/local:/app/storage/local
      - ./storage/public:/app/storage/public
    networks:
      - ${APP_NAME:-fast_app}

  # Scheduler Service
  scheduler:
    build: .
    container_name: "${APP_NAME:-fast_app}-scheduler"
    env_file:
      - .env.docker
    environment:
      - REDIS_HOST=redis
    depends_on:
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    command: ["python", "-m", "app.modules.scheduler"]
    restart: unless-stopped
    volumes:
      - ./log:/app/log
      - ./storage/local:/app/storage/local
      - ./storage/public:/app/storage/public
    networks:
      - ${APP_NAME:-fast_app}

  # Redis
  redis:
    image: redis:7-alpine
    container_name: "${APP_NAME:-fast_app}-redis"
    ports:
      - "${MAP_REDIS_PORT:-6379}:6379"
    restart: unless-stopped
    volumes:
      - redis_data:/data
    networks:
      - ${APP_NAME:-fast_app}
    command: redis-server --appendonly yes
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 3

  # RabbitMQ 
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: "${APP_NAME:-fast_app}-rabbitmq"
    ports:
      - "${MAP_RABBITMQ_PORT:-5672}:5672"    # AMQP port
      - "${MAP_RABBITMQ_MANAGEMENT_PORT:-15672}:15672"  # Management UI port
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER:-guest}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD:-guest}
    restart: unless-stopped
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - ${APP_NAME:-fast_app}
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 3

volumes:
  redis_data:

networks:
  ${APP_NAME:-fast_app}:
    driver: bridge 